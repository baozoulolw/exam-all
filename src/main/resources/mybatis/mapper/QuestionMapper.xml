<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="top.baozoulolw.exam.dao.QuestionDao">
    <select id="getQuestionList" resultType="top.baozoulolw.exam.entity.Question"
            parameterType="top.baozoulolw.exam.vo.QuestionParamVO">
        select q.*, u.real_name as change_user ,u1.real_name as createName from
        tb_question q
        left join tb_user u on u.id = q.oper_user
        left join tb_user u1 on u1.id = q.create_user
        <where>
            <if test="param.type != null">
                AND q.type = #{param.type}
            </if>
            <if test="param.groupId != null">
                AND q.group_id = #{param.groupId}
            </if>
            <if test="param.hard != null">
                AND q.hard = #{param.hard}
            </if>
            <if test="param.createUser != null and param.createUser != ''">
                AND q.create_user = #{param.createUser}
            </if>
            <if test="param.keyword != null and param.keyword != ''">
                AND (q.options like "%"#{param.keyword}"%"
                OR q.answer like "%"#{param.keyword}"%"
                OR q.topic like "%"#{param.keyword}"%"
                )
            </if>
            <if test="param.selectPaperId != null and param.selectPaperId != ''">
                and q.id NOT IN (
                SELECT
                tqp.question_id
                FROM
                tb_question_paper tqp
                WHERE
                tqp.paper_id = #{param.selectPaperId} )
            </if>
        </where>
    </select>
    <resultMap id="group" type="top.baozoulolw.exam.entity.QuestionGroup">
        <id property="id" column="id"/>
        <result property="changeTime" column="changeTime"/>
        <result property="operUser" column="operUser"/>
        <result property="createTime" column="createTime"/>
        <result property="groupName" column="group_name"/>
        <result property="parent" column="parent"/>
        <collection property="children" ofType="top.baozoulolw.exam.entity.QuestionGroup">
            <id property="id" column="cid"/>
            <result property="changeTime" column="c_changeTime"/>
            <result property="operUser" column="c_operUser"/>
            <result property="createTime" column="c_createTime"/>
            <result property="groupName" column="c_groupName"/>
            <result property="parent" column="c_parent"/>
            <association property="questionNumber" column="{id=cid,userId=userId}" select="selectNumber"/>
        </collection>
    </resultMap>
    <select id="getGroupList" resultMap="group">
        SELECT
        qg.id,
        #{userId} as userId,
        qg.parent,
        qg.group_name,
        qg.change_time as changeTime,
        qg.create_time as createTime,
        qg.oper_user as operUser,
        qg1.id as cid,
        qg1.parent as c_parent,
        qg1.change_time as c_changeTime,
        qg1.create_time as c_createTime,
        qg1.group_name as c_groupName,
        qg1.oper_user as c_operUser
        FROM
        tb_question_group qg
        LEFT JOIN tb_question_group qg1 ON qg1.parent = qg.id
        LEFT JOIN tb_user_course uc ON uc.course_id = qg.id
        LEFT JOIN tb_user u ON u.id = uc.user_id
        where qg.parent = 2 and u.id = #{self}
        GROUP BY
        qg.id,qg1.id
    </select>
    <select id="selectNumber" resultType="int">
        select count(q.id) questionNumber from tb_question q
        where q.group_id = #{id}
        <if test="userId != null and userId != ''">
             and q.create_user = #{userId}
        </if>
    </select>
    <select id="getAllGroupList" resultMap="group">
        SELECT
        qg.id,
        qg.parent,
        qg.group_name,
        qg.change_time as changeTime,
        qg.create_time as createTime,
        qg.oper_user as operUser,
        qg1.id as cid,
        qg1.parent as c_parent,
        qg1.change_time as c_changeTime,
        qg1.create_time as c_createTime,
        qg1.group_name as c_groupName,
        qg1.oper_user as c_operUser
        FROM
        tb_question_group qg
        LEFT JOIN tb_question_group qg1 ON qg1.parent = qg.id
        where qg.parent = 2
        GROUP BY
        qg.id,qg1.id
    </select>
</mapper>